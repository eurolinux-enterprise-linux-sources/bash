diff --git a/parse.y b/parse.y
index 9a78d0c..7df7d99 100644
--- a/parse.y
+++ b/parse.y
@@ -4993,7 +4993,8 @@ decode_prompt_string (string)
   struct dstack save_dstack;
   int last_exit_value, last_comsub_pid;
 #if defined (PROMPT_STRING_DECODE)
-  int result_size, result_index;
+  size_t result_size;
+  int result_index;
   int c, n, i;
   char *temp, octal_string[4];
   struct tm *tm;  
diff --git a/subst.c b/subst.c
index 9f15f0b..e5ffd03 100644
--- a/subst.c
+++ b/subst.c
@@ -644,11 +644,13 @@ unquoted_substring (substr, string)
 INLINE char *
 sub_append_string (source, target, indx, size)
      char *source, *target;
-     int *indx, *size;
+     int *indx;
+     size_t *size;
 {
   if (source)
     {
-      int srclen, n;
+      int n;
+      size_t srclen;
 
       srclen = STRLEN (source);
       if (srclen >= (int)(*size - *indx))
@@ -7676,7 +7678,7 @@ expand_word_internal (word, quoted, isexp, contains_dollar_at, expanded_somethin
   char *istring;
 
   /* The current size of the above object. */
-  int istring_size;
+  size_t istring_size;
 
   /* Index into ISTRING. */
   int istring_index;
diff --git a/subst.h b/subst.h
index b06e8c2..fc66faf 100644
--- a/subst.h
+++ b/subst.h
@@ -127,7 +127,7 @@ extern int do_word_assignment __P((WORD_DESC *));
    of space allocated to TARGET.  SOURCE can be NULL, in which
    case nothing happens.  Gets rid of SOURCE by free ()ing it.
    Returns TARGET in case the location has changed. */
-extern char *sub_append_string __P((char *, char *, int *, int *));
+extern char *sub_append_string __P((char *, char *, int *, size_t *));
 
 /* Append the textual representation of NUMBER to TARGET.
    INDEX and SIZE are as in SUB_APPEND_STRING. */
diff --git a/y.tab.c b/y.tab.c
index d702554..31faa4a 100644
--- a/y.tab.c
+++ b/y.tab.c
@@ -7280,7 +7280,8 @@ decode_prompt_string (string)
   struct dstack save_dstack;
   int last_exit_value, last_comsub_pid;
 #if defined (PROMPT_STRING_DECODE)
-  int result_size, result_index;
+  size_t result_size;
+  int result_index;
   int c, n, i;
   char *temp, octal_string[4];
   struct tm *tm;  
-- 
2.5.5

